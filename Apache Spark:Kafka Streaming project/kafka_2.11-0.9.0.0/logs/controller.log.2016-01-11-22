[2016-01-11 22:03:09,305] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:03:09,308] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:03:09,308] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:03:09,308] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:08:09,314] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:08:09,316] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:08:09,316] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:08:09,316] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:13:49,666] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2016-01-11 22:15:55,642] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:15:55,642] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:15:55,642] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:15:55,642] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:18:09,331] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:18:09,332] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:18:09,332] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:18:09,332] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:19:10,330] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2016-01-11 22:19:11,320] INFO [SessionExpirationListener on 0], ZK expired; shut down all controller components and try to re-elect (kafka.controller.KafkaController$SessionExpirationListener)
[2016-01-11 22:19:11,321] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-01-11 22:19:11,321] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-01-11 22:19:11,321] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:11,322] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-01-11 22:19:11,325] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-01-11 22:19:11,325] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-01-11 22:19:11,325] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-01-11 22:19:11,325] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2016-01-11 22:19:11,341] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-01-11 22:19:11,345] INFO [Controller 0]: Initialized controller epoch to 2 and zk version 1 (kafka.controller.KafkaController)
[2016-01-11 22:19:11,348] INFO [Controller 0]: Controller 0 incremented epoch to 3 (kafka.controller.KafkaController)
[2016-01-11 22:19:11,349] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-01-11 22:19:11,368] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-01-11 22:19:11,368] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-01-11 22:19:11,368] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-01-11 22:19:11,369] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-01-11 22:19:11,369] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-01-11 22:19:11,369] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-01-11 22:19:11,370] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-01-11 22:19:11,370] INFO [Controller 0]: List of topics ineligible for deletion: twitterstream (kafka.controller.KafkaController)
[2016-01-11 22:19:11,371] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-01-11 22:19:11,371] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-01-11 22:19:11,371] INFO [Controller 0]: Current list of topics in the cluster: Set(twitterstream) (kafka.controller.KafkaController)
[2016-01-11 22:19:11,371] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=twitterstream,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-01-11 22:19:11,381] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitterstream,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-11 22:19:11,382] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([twitterstream,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:11,383] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2016-01-11 22:19:11,383] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-01-11 22:19:11,383] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:11,386] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-01-11 22:19:11,395] DEBUG [IsrChangeNotificationListener] Fired!!! (kafka.controller.IsrChangeNotificationListener)
[2016-01-11 22:19:11,396] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-11 22:19:11,407] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-11 22:19:11,407] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-01-11 22:19:11,408] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-01-11 22:19:11,409] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-01-11 22:19:11,409] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-01-11 22:19:11,411] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:11,416] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [twitterstream,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-11 22:19:11,416] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":2,"isr":[0]} for offline partition [twitterstream,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-11 22:19:11,418] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitterstream,0] -> (Leader:0,ISR:0,LeaderEpoch:2,ControllerEpoch:3)) (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:11,422] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children twitterstream (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-01-11 22:19:11,422] INFO [TopicChangeListener on Controller 0]: New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2016-01-11 22:19:11,429] INFO [AddPartitionsListener on 0]: Add Partition triggered {"version":1,"partitions":{"0":[0]}} for path /brokers/topics/twitterstream (kafka.controller.PartitionStateMachine$AddPartitionsListener)
[2016-01-11 22:19:11,433] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-11 22:19:11,438] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: , deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-11 22:19:11,719] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:12,021] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:12,325] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:12,630] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:12,931] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:13,233] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:13,536] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:13,839] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker Node(0, 192.168.0.11, 9092) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to Node(0, 192.168.0.11, 9092) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:62)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$1.apply(NetworkClientBlockingOps.scala:58)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:106)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$kafka$utils$NetworkClientBlockingOps$$pollUntil$extension$2.apply(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.recurse$1(NetworkClientBlockingOps.scala:129)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntilFound$extension(NetworkClientBlockingOps.scala:139)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:105)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:58)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:225)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:172)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:171)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2016-01-11 22:19:13,885] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2016-01-11 22:19:13,885] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-01-11 22:19:13,885] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:13,885] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2016-01-11 22:19:13,887] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2016-01-11 22:19:13,887] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2016-01-11 22:19:13,887] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2016-01-11 22:19:13,887] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
[2016-01-11 22:19:46,404] INFO [Controller 0]: Controller starting up (kafka.controller.KafkaController)
[2016-01-11 22:19:46,429] INFO [Controller 0]: Broker 0 starting become controller state transition (kafka.controller.KafkaController)
[2016-01-11 22:19:46,437] INFO [Controller 0]: Initialized controller epoch to 3 and zk version 2 (kafka.controller.KafkaController)
[2016-01-11 22:19:46,441] INFO [Controller 0]: Controller 0 incremented epoch to 4 (kafka.controller.KafkaController)
[2016-01-11 22:19:46,442] DEBUG [Controller 0]: Registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2016-01-11 22:19:46,494] INFO [Controller 0]: Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2016-01-11 22:19:46,495] INFO [Controller 0]: Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2016-01-11 22:19:46,495] INFO [Controller 0]: Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2016-01-11 22:19:46,498] INFO [Controller 0]: Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2016-01-11 22:19:46,499] INFO [Controller 0]: Partitions already reassigned: List() (kafka.controller.KafkaController)
[2016-01-11 22:19:46,500] INFO [Controller 0]: Resuming reassignment of partitions: Map() (kafka.controller.KafkaController)
[2016-01-11 22:19:46,504] INFO [Controller 0]: List of topics to be deleted:  (kafka.controller.KafkaController)
[2016-01-11 22:19:46,504] INFO [Controller 0]: List of topics ineligible for deletion: twitterstream (kafka.controller.KafkaController)
[2016-01-11 22:19:46,507] INFO [Controller 0]: Currently active brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-01-11 22:19:46,508] INFO [Controller 0]: Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2016-01-11 22:19:46,508] INFO [Controller 0]: Current list of topics in the cluster: Set(twitterstream) (kafka.controller.KafkaController)
[2016-01-11 22:19:46,512] INFO [Replica state machine on controller 0]: Started replica state machine with initial state -> Map([Topic=twitterstream,Partition=0,Replica=0] -> ReplicaDeletionIneligible) (kafka.controller.ReplicaStateMachine)
[2016-01-11 22:19:46,530] DEBUG [OfflinePartitionLeaderSelector]: No broker in ISR is alive for [twitterstream,0]. Pick the leader from the alive assigned replicas:  (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-11 22:19:46,539] INFO [Partition state machine on Controller 0]: Started partition state machine with initial state -> Map([twitterstream,0] -> OfflinePartition) (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:46,541] INFO [Controller 0]: Broker 0 is ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2016-01-11 22:19:46,542] INFO [Controller 0]: Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2016-01-11 22:19:46,543] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions  (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:46,550] INFO [Controller 0]: starting the partition rebalance scheduler (kafka.controller.KafkaController)
[2016-01-11 22:19:46,551] INFO [Controller 0]: Controller startup complete (kafka.controller.KafkaController)
[2016-01-11 22:19:46,625] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-11 22:19:46,662] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 0, deleted brokers: , all live brokers: 0 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2016-01-11 22:19:46,663] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2016-01-11 22:19:46,678] INFO [Controller-0-to-broker-0-send-thread], Starting  (kafka.controller.RequestSendThread)
[2016-01-11 22:19:46,679] INFO [Controller 0]: New broker startup callback for 0 (kafka.controller.KafkaController)
[2016-01-11 22:19:46,706] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=twitterstream,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2016-01-11 22:19:46,711] INFO [Controller-0-to-broker-0-send-thread], Controller 0 connected to Node(0, 192.168.0.11, 9092) for sending state change requests (kafka.controller.RequestSendThread)
[2016-01-11 22:19:46,731] DEBUG [OfflinePartitionLeaderSelector]: Some broker in ISR is alive for [twitterstream,0]. Select 0 from ISR 0 to be the leader. (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-11 22:19:46,732] INFO [OfflinePartitionLeaderSelector]: Selected new leader and ISR {"leader":0,"leader_epoch":3,"isr":[0]} for offline partition [twitterstream,0] (kafka.controller.OfflinePartitionLeaderSelector)
[2016-01-11 22:19:46,754] DEBUG [Partition state machine on Controller 0]: After leader election, leader cache is updated to Map([twitterstream,0] -> (Leader:0,ISR:0,LeaderEpoch:3,ControllerEpoch:4)) (kafka.controller.PartitionStateMachine)
[2016-01-11 22:19:51,553] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:19:51,556] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:19:51,558] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:19:51,559] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:24:51,559] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:24:51,560] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:24:51,561] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:24:51,561] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:29:51,570] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:29:51,572] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:29:51,572] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:29:51,572] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:34:51,573] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:34:51,573] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:34:51,574] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:34:51,574] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:39:51,581] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:39:51,581] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:39:51,582] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:39:51,582] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:44:51,588] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:44:51,590] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:44:51,590] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:44:51,590] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:49:51,595] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:49:51,596] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:49:51,596] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:49:51,596] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:54:51,605] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:54:51,606] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:54:51,606] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:54:51,606] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
[2016-01-11 22:59:51,614] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2016-01-11 22:59:51,614] DEBUG [Controller 0]: preferred replicas by broker Map(0 -> Map([twitterstream,0] -> List(0))) (kafka.controller.KafkaController)
[2016-01-11 22:59:51,614] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2016-01-11 22:59:51,614] TRACE [Controller 0]: leader imbalance ratio for broker 0 is 0.000000 (kafka.controller.KafkaController)
